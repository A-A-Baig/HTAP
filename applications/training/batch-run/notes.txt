TRAINING NOTES:

1) Genopt-Batch-Run
======================

*** commands: 

cd C:\HTAP\applications\training\batch-run
java -cp 'C:\Program Files\genopt\genopt.jar' genopt.GenOpt Genopt-H2K-INI.GO-ini

C:\HTAP\recover-results.rb -l


a) Run command. Talk about what is happening. 

    [ Java is loading the genopt class, which is confgured according to the 
      parameters in the Genopt-H2K.ini file. That contains pointers 
      to template files and other files that GenOpt needs to get off 
      the ground. 
      
      That includes a pointer to the .cmd file, which 
      tells genopt how to process the batch run. Genopt repeatedly creates
      .choice files according to the parameters in the .cmd file, and then
      invokes hot2000 to evaluate the result. 
      
    
    ]

b) Open up the .cmd file. Look at contents

    [ - Discuss how each parameter is a list of discrete values. Note that
        setting the value to "NA" causes substiture-h2k.rb to leave the file
        alone. 
        
      - Examine the mesh / optimziation definitions n the algorithm section 
        below. 
     
      - Some choices define how hot2000 should be invoked (archetype, result
        mode) while others define how a .h2k file should be modified. 
        
    ]
       
c) Discuss output: outputlistingall.txt - 

        
d) Convert output to .csv format

   [ run C:\HTAP\recover-results.rb -l 
   
     open up cloud-results-all-data.csv in excel. 
   
e) Add some parameters to the cmd file batch  - 

    [ Add ACH_1_0 to the ACH (air-tightness results). Re-run 
      and note how the number of evaluations goes up from 27 to 36.
 
      
      

    ]

    
f) Demonstrate what happens if there is a miss-spelling in parameter
   definitions.

    [ Set ACH -> APH_1_0
         
          
    ]
    
   
    
    
g) Demonstrate a typical error - misspell Calggary





 
 
 